//! ```cargo
//! [dependencies]
//! serde = { version = "1.0", features = ["derive"] }
//! serde_json = "1.0"
//! ```

use std::fs;
use std::path::Path;

/// Load sequences from a JSON file generated by Python utils.
fn load_sequences<P: AsRef<Path>>(path: P) -> Result<Vec<Vec<i32>>, Box<dyn std::error::Error>> {
    let data = fs::read_to_string(path)?;
    let sequences: Vec<Vec<i32>> = serde_json::from_str(&data)?;
    Ok(sequences)
}

fn main() -> Result<(), Box<dyn std::error::Error>> {
    // Read the JSON generated by Python (adjust the path if needed)
    let sequences = load_sequences("data/sequences_small.json")?;

    println!("Loaded {} sequences.", sequences.len());
    for (i, seq) in sequences.iter().enumerate() {
        println!("Sequence {} length: {}", i + 1, seq.len());
    }

    Ok(())
}
